[build-system]
requires = ["hatchling", "hatch-vcs", "wheel", "numpy<2.0"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[project]
name = "poly-lithic"
dynamic = ["version"]
description = "A package for deploying AI and other models and more using lume inspired interfaces"
authors = [
    {"name" = "Mateusz Leputa"},
    {"name" = "Kathryn Baker"},
    {"name" = "Mihnea Romanovschi"},
    {"name" = "Jesse Bellister"},
]
dependencies = [
    "pandas>=2.0.1",
    "numpy>=2.0.0",
    "keras>=3.1.1",
    "mlflow==2.22.2",
    "boto3>=1.34.65",
    "psycopg2-binary",
    "k2eg>=0.2.16",
    "psutil>=6.0.0",
    "colorlog>=6.8.2",
    "p4p>=4.2.1",
    "pyepics>=3.5.7",
    "h5py>=3.12.1",
    "lume-model>=2.0.0",
    "matplotlib>=3.10.1",
    "networkx>=3.4.2",
    "pydantic>=2.10.6",
    "pyyaml>=6.0.2",
    "requests>=2.32.3",
    "sympy>=1.13.1",
]
[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-asyncio",
    "black",
    "flake8",
    "ruff",
    "isort",
    "pre-commit",
    "sphinx",
    "sphinx-rtd-theme",
    "twine",
    "wheel",
    "hatchling",
    "hatch-vcs",
    "torch>=2.6.0",
]
torch = ["torch>=2.6.0", "lume-model>=2.0.0"]
tensorflow = ["keras>=3.1.1", "tensorflow>=2.14.0"] 
tensorflow_cpu = ["keras>=3.1.1", "tensorflow-cpu>=2.14.0"]


[tool.hatch.version]
source = "vcs" #test

[tool.hatch.build.hooks.vcs]
version-file = "poly_lithic/_version.py"

[tool.hatch.build.targets.sdist]
# exclude everying apart gthan the src directory
include =["poly_lithic"]

[tool.hatch.build.targets.wheel]
packages = ["poly_lithic"]
only-packages = true

[tool.ruff.format]
preview = true
quote-style = "single"

[project.scripts]
poly_lithic = "poly_lithic.scripts.main:main"
pl = "poly_lithic.scripts.main:main"
model_manager = "poly_lithic.scripts.main:main" # legacy alias for poly_lithic


[tool.hatch.envs.default.env-vars]
PYTHONPATH = "poly_lithic/src"

[tool.hatch.envs.default.scripts]
test = "pytest"

[tool.hatch.version.raw-options]
local_scheme = "no-local-version"

[tool.hatch.scripts]
pre_install = "poly_lithic/pre_install.py"

[tool.hatch.envs.default.pipelines]
pre_install = ["pre_install"]

[[tool.hatch.envs.default.pipelines.install]]
hooks = ["pre_install"]

[tool.ruff.lint]
select = ["NPY201"]
