deployment:
  type: "continuous"
  rate: 1 #seconds

modules: 
  
  p4p_server:
    name: "p4p_server" # overrides the top key
    type: "interface.p4p_server"
    pub: "p4p_input_interface"
    sub: 
      - "update"             
    module_args: None # defines what arguments to pass to the module observer, if any this can inform unpacking etc
    config: 
      EPICS_PVA_NAME_SERVERS: "localhost:5075"
      variables:
        LUME:MLFLOW:TEST_B:
          proto: pva
          name: LUME:MLFLOW:TEST_B 
        LUME:MLFLOW:TEST_A:
          proto: pva
          name: LUME:MLFLOW:TEST_A
        LUME:MLFLOW:TEST_S:
          proto: pva
          name: LUME:MLFLOW:TEST_S
  
  input_transformer:
    name: "input_transformer"
    type: "transformer.SimpleTransformer"
    pub: "in_transformer"
    sub: "p4p_input_interface"
    module_args: None
    config:
      symbols:
        - "LUME:MLFLOW:TEST_B"
        - "LUME:MLFLOW:TEST_A"
      variables:
        x2:
          formula: "LUME:MLFLOW:TEST_B"
        x1: 
          formula: "LUME:MLFLOW:TEST_A"
 
  model:
    name: "model"
    type: "model.SimpleModel"
    pub: "model"
    sub: "in_transformer"
    module_args: None
    config: 
      variables:
        y:
          type: "scalar"
  
  output_transformer:
    name: "output_transformer"
    type: "transformer.SimpleTransformer"
    pub: "out_transformer"
    sub: "model"
    module_args: 
      unpack_data: True
    config:
      symbols:
        - "y"
      variables:
        LUME:MLFLOW:TEST_S:
          formula: "y"

  output_data_x:
    name: "output_data_x"
    type: "interface.p4p_server"
    pub: None
    sub: "out_transformer"
    module_args: None
    config:
      variables:
        LUME:MLFLOW:TEST_A:
          proto: pva
          name: LUME:MLFLOW:TEST_A

  output_data_y:
    name: "output_data_y"
    type: "interface.p4p_server"
    pub: None
    sub: None
    module_args: None
    config:
      variables:
        LUME:MLFLOW:TEST_B:
          proto: pva
          name: LUME:MLFLOW:TEST_B